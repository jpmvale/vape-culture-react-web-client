{"ast":null,"code":"var debug = require('debug')('nodemon');\n\nvar path = require('path');\n\nvar monitor = require('./monitor');\n\nvar cli = require('./cli');\n\nvar version = require('./version');\n\nvar util = require('util');\n\nvar utils = require('./utils');\n\nvar bus = utils.bus;\n\nvar help = require('./help');\n\nvar config = require('./config');\n\nvar spawn = require('./spawn');\n\nconst defaults = require('./config/defaults');\n\nvar eventHandlers = {}; // this is fairly dirty, but theoretically sound since it's part of the\n// stable module API\n\nconfig.required = utils.isRequired;\n\nfunction nodemon(settings) {\n  bus.emit('boot');\n  nodemon.reset(); // allow the cli string as the argument to nodemon, and allow for\n  // `node nodemon -V app.js` or just `-V app.js`\n\n  if (typeof settings === 'string') {\n    settings = settings.trim();\n\n    if (settings.indexOf('node') !== 0) {\n      if (settings.indexOf('nodemon') !== 0) {\n        settings = 'nodemon ' + settings;\n      }\n\n      settings = 'node ' + settings;\n    }\n\n    settings = cli.parse(settings);\n  } // set the debug flag as early as possible to get all the detailed logging\n\n\n  if (settings.verbose) {\n    utils.debug = true;\n  }\n\n  if (settings.help) {\n    process.stdout._handle.setBlocking(true); // nodejs/node#6456\n\n\n    console.log(help(settings.help));\n\n    if (!config.required) {\n      process.exit(0);\n    }\n  }\n\n  if (settings.version) {\n    version().then(function (v) {\n      console.log(v);\n\n      if (!config.required) {\n        process.exit(0);\n      }\n    });\n    return;\n  } // nodemon tools like grunt-nodemon. This affects where\n  // the script is being run from, and will affect where\n  // nodemon looks for the nodemon.json files\n\n\n  if (settings.cwd) {\n    // this is protection to make sure we haven't dont the chdir already...\n    // say like in cli/parse.js (which is where we do this once already!)\n    if (process.cwd() !== path.resolve(config.system.cwd, settings.cwd)) {\n      process.chdir(settings.cwd);\n    }\n  }\n\n  const cwd = process.cwd();\n  config.load(settings, function (config) {\n    if (!config.options.dump && !config.options.execOptions.script && config.options.execOptions.exec === 'node') {\n      if (!config.required) {\n        console.log(help('usage'));\n        process.exit();\n      }\n\n      return;\n    } // before we print anything, update the colour setting on logging\n\n\n    utils.colours = config.options.colours; // always echo out the current version\n\n    utils.log.info(version.pinned);\n    const cwd = process.cwd();\n\n    if (config.options.cwd) {\n      utils.log.detail('process root: ' + cwd);\n    }\n\n    config.loaded.map(file => file.replace(cwd, '.')).forEach(file => {\n      utils.log.detail('reading config ' + file);\n    });\n\n    if (config.options.stdin && config.options.restartable) {\n      // allow nodemon to restart when the use types 'rs\\n'\n      process.stdin.resume();\n      process.stdin.setEncoding('utf8');\n      process.stdin.on('data', data => {\n        const str = data.toString().trim().toLowerCase(); // if the keys entered match the restartable value, then restart!\n\n        if (str === config.options.restartable) {\n          bus.emit('restart');\n        } else if (data.charCodeAt(0) === 12) {\n          // ctrl+l\n          console.clear();\n        }\n      });\n    } else if (config.options.stdin) {\n      // so let's make sure we don't eat the key presses\n      // but also, since we're wrapping, watch out for\n      // special keys, like ctrl+c x 2 or '.exit' or ctrl+d or ctrl+l\n      var ctrlC = false;\n      var buffer = '';\n      process.stdin.on('data', function (data) {\n        data = data.toString();\n        buffer += data;\n        const chr = data.charCodeAt(0); // if restartable, echo back\n\n        if (chr === 3) {\n          if (ctrlC) {\n            process.exit(0);\n          }\n\n          ctrlC = true;\n          return;\n        } else if (buffer === '.exit' || chr === 4) {\n          // ctrl+d\n          process.exit();\n        } else if (chr === 13 || chr === 10) {\n          // enter / carriage return\n          buffer = '';\n        } else if (chr === 12) {\n          // ctrl+l\n          console.clear();\n          buffer = '';\n        }\n\n        ctrlC = false;\n      });\n\n      if (process.stdin.setRawMode) {\n        process.stdin.setRawMode(true);\n      }\n    }\n\n    if (config.options.restartable) {\n      utils.log.info('to restart at any time, enter `' + config.options.restartable + '`');\n    }\n\n    if (!config.required) {\n      const restartSignal = config.options.signal === 'SIGUSR2' ? 'SIGHUP' : 'SIGUSR2';\n      process.on(restartSignal, nodemon.restart);\n      utils.bus.on('error', () => {\n        utils.log.fail(new Error().stack);\n      });\n      utils.log.detail((config.options.restartable ? 'or ' : '') + 'send ' + restartSignal + ' to ' + process.pid + ' to restart');\n    }\n\n    const ignoring = config.options.monitor.map(function (rule) {\n      if (rule.slice(0, 1) !== '!') {\n        return false;\n      }\n\n      rule = rule.slice(1); // don't notify of default ignores\n\n      if (defaults.ignoreRoot.indexOf(rule) !== -1) {\n        return false;\n        return rule.slice(3).slice(0, -3);\n      }\n\n      if (rule.startsWith(cwd)) {\n        return rule.replace(cwd, '.');\n      }\n\n      return rule;\n    }).filter(Boolean).join(' ');\n    if (ignoring) utils.log.detail('ignoring: ' + ignoring);\n    utils.log.info('watching path(s): ' + config.options.monitor.map(function (rule) {\n      if (rule.slice(0, 1) !== '!') {\n        try {\n          rule = path.relative(process.cwd(), rule);\n        } catch (e) {}\n\n        return rule;\n      }\n\n      return false;\n    }).filter(Boolean).join(' '));\n    utils.log.info('watching extensions: ' + (config.options.execOptions.ext || '(all)'));\n\n    if (config.options.dump) {\n      utils.log._log('log', '--------------');\n\n      utils.log._log('log', 'node: ' + process.version);\n\n      utils.log._log('log', 'nodemon: ' + version.pinned);\n\n      utils.log._log('log', 'command: ' + process.argv.join(' '));\n\n      utils.log._log('log', 'cwd: ' + cwd);\n\n      utils.log._log('log', ['OS:', process.platform, process.arch].join(' '));\n\n      utils.log._log('log', '--------------');\n\n      utils.log._log('log', util.inspect(config, {\n        depth: null\n      }));\n\n      utils.log._log('log', '--------------');\n\n      if (!config.required) {\n        process.exit();\n      }\n\n      return;\n    }\n\n    config.run = true;\n\n    if (config.options.stdout === false) {\n      nodemon.on('start', function () {\n        nodemon.stdout = bus.stdout;\n        nodemon.stderr = bus.stderr;\n        bus.emit('readable');\n      });\n    }\n\n    if (config.options.events && Object.keys(config.options.events).length) {\n      Object.keys(config.options.events).forEach(function (key) {\n        utils.log.detail('bind ' + key + ' -> `' + config.options.events[key] + '`');\n        nodemon.on(key, function () {\n          if (config.options && config.options.events) {\n            spawn(config.options.events[key], config, [].slice.apply(arguments));\n          }\n        });\n      });\n    }\n\n    monitor.run(config.options);\n  });\n  return nodemon;\n}\n\nnodemon.restart = function () {\n  utils.log.status('restarting child process');\n  bus.emit('restart');\n  return nodemon;\n};\n\nnodemon.addListener = nodemon.on = function (event, handler) {\n  if (!eventHandlers[event]) {\n    eventHandlers[event] = [];\n  }\n\n  eventHandlers[event].push(handler);\n  bus.on(event, handler);\n  return nodemon;\n};\n\nnodemon.once = function (event, handler) {\n  if (!eventHandlers[event]) {\n    eventHandlers[event] = [];\n  }\n\n  eventHandlers[event].push(handler);\n  bus.once(event, function () {\n    debug('bus.once(%s)', event);\n    eventHandlers[event].splice(eventHandlers[event].indexOf(handler), 1);\n    handler.apply(this, arguments);\n  });\n  return nodemon;\n};\n\nnodemon.emit = function () {\n  bus.emit.apply(bus, [].slice.call(arguments));\n  return nodemon;\n};\n\nnodemon.removeAllListeners = function (event) {\n  // unbind only the `nodemon.on` event handlers\n  Object.keys(eventHandlers).filter(function (e) {\n    return event ? e === event : true;\n  }).forEach(function (event) {\n    eventHandlers[event].forEach(function (handler) {\n      bus.removeListener(event, handler);\n      eventHandlers[event].splice(eventHandlers[event].indexOf(handler), 1);\n    });\n  });\n  return nodemon;\n};\n\nnodemon.reset = function (done) {\n  bus.emit('reset', done);\n};\n\nbus.on('reset', function (done) {\n  debug('reset');\n  nodemon.removeAllListeners();\n  monitor.run.kill(true, function () {\n    utils.reset();\n    config.reset();\n    config.run = false;\n\n    if (done) {\n      done();\n    }\n  });\n}); // expose the full config\n\nnodemon.config = config;\nmodule.exports = nodemon;","map":{"version":3,"sources":["C:/Users/jpmva/source/repos/vape-culture/vape-culture-react-web-client/node_modules/nodemon/lib/nodemon.js"],"names":["debug","require","path","monitor","cli","version","util","utils","bus","help","config","spawn","defaults","eventHandlers","required","isRequired","nodemon","settings","emit","reset","trim","indexOf","parse","verbose","process","stdout","_handle","setBlocking","console","log","exit","then","v","cwd","resolve","system","chdir","load","options","dump","execOptions","script","exec","colours","info","pinned","detail","loaded","map","file","replace","forEach","stdin","restartable","resume","setEncoding","on","data","str","toString","toLowerCase","charCodeAt","clear","ctrlC","buffer","chr","setRawMode","restartSignal","signal","restart","fail","Error","stack","pid","ignoring","rule","slice","ignoreRoot","startsWith","filter","Boolean","join","relative","e","ext","_log","argv","platform","arch","inspect","depth","run","stderr","events","Object","keys","length","key","apply","arguments","status","addListener","event","handler","push","once","splice","call","removeAllListeners","removeListener","done","kill","module","exports"],"mappings":"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","sourcesContent":["var debug = require('debug')('nodemon');\nvar path = require('path');\nvar monitor = require('./monitor');\nvar cli = require('./cli');\nvar version = require('./version');\nvar util = require('util');\nvar utils = require('./utils');\nvar bus = utils.bus;\nvar help = require('./help');\nvar config = require('./config');\nvar spawn = require('./spawn');\nconst defaults = require('./config/defaults')\nvar eventHandlers = {};\n\n// this is fairly dirty, but theoretically sound since it's part of the\n// stable module API\nconfig.required = utils.isRequired;\n\nfunction nodemon(settings) {\n  bus.emit('boot');\n  nodemon.reset();\n\n  // allow the cli string as the argument to nodemon, and allow for\n  // `node nodemon -V app.js` or just `-V app.js`\n  if (typeof settings === 'string') {\n    settings = settings.trim();\n    if (settings.indexOf('node') !== 0) {\n      if (settings.indexOf('nodemon') !== 0) {\n        settings = 'nodemon ' + settings;\n      }\n      settings = 'node ' + settings;\n    }\n    settings = cli.parse(settings);\n  }\n\n  // set the debug flag as early as possible to get all the detailed logging\n  if (settings.verbose) {\n    utils.debug = true;\n  }\n\n  if (settings.help) {\n    process.stdout._handle.setBlocking(true); // nodejs/node#6456\n    console.log(help(settings.help));\n    if (!config.required) {\n      process.exit(0);\n    }\n  }\n\n  if (settings.version) {\n    version().then(function (v) {\n      console.log(v);\n      if (!config.required) {\n        process.exit(0);\n      }\n    });\n    return;\n  }\n\n  // nodemon tools like grunt-nodemon. This affects where\n  // the script is being run from, and will affect where\n  // nodemon looks for the nodemon.json files\n  if (settings.cwd) {\n    // this is protection to make sure we haven't dont the chdir already...\n    // say like in cli/parse.js (which is where we do this once already!)\n    if (process.cwd() !== path.resolve(config.system.cwd, settings.cwd)) {\n      process.chdir(settings.cwd);\n    }\n  }\n\n  const cwd = process.cwd();\n\n  config.load(settings, function (config) {\n    if (!config.options.dump && !config.options.execOptions.script &&\n      config.options.execOptions.exec === 'node') {\n      if (!config.required) {\n        console.log(help('usage'));\n        process.exit();\n      }\n      return;\n    }\n\n    // before we print anything, update the colour setting on logging\n    utils.colours = config.options.colours;\n\n    // always echo out the current version\n    utils.log.info(version.pinned);\n\n    const cwd = process.cwd();\n\n    if (config.options.cwd) {\n      utils.log.detail('process root: ' + cwd);\n    }\n\n    config.loaded.map(file => file.replace(cwd, '.')).forEach(file => {\n      utils.log.detail('reading config ' + file);\n    });\n\n    if (config.options.stdin && config.options.restartable) {\n      // allow nodemon to restart when the use types 'rs\\n'\n      process.stdin.resume();\n      process.stdin.setEncoding('utf8');\n      process.stdin.on('data', data => {\n        const str = data.toString().trim().toLowerCase();\n\n        // if the keys entered match the restartable value, then restart!\n        if (str === config.options.restartable) {\n          bus.emit('restart');\n        } else if (data.charCodeAt(0) === 12) { // ctrl+l\n          console.clear();\n        }\n      });\n    } else if (config.options.stdin) {\n      // so let's make sure we don't eat the key presses\n      // but also, since we're wrapping, watch out for\n      // special keys, like ctrl+c x 2 or '.exit' or ctrl+d or ctrl+l\n      var ctrlC = false;\n      var buffer = '';\n\n      process.stdin.on('data', function (data) {\n        data = data.toString();\n        buffer += data;\n        const chr = data.charCodeAt(0);\n\n        // if restartable, echo back\n        if (chr === 3) {\n          if (ctrlC) {\n            process.exit(0);\n          }\n\n          ctrlC = true;\n          return;\n        } else if (buffer === '.exit' || chr === 4) { // ctrl+d\n          process.exit();\n        } else if (chr === 13 || chr === 10) { // enter / carriage return\n          buffer = '';\n        } else if (chr === 12) { // ctrl+l\n          console.clear();\n          buffer = '';\n        }\n        ctrlC = false;\n      });\n      if (process.stdin.setRawMode) {\n        process.stdin.setRawMode(true);\n      }\n    }\n\n    if (config.options.restartable) {\n      utils.log.info('to restart at any time, enter `' +\n        config.options.restartable + '`');\n    }\n\n    if (!config.required) {\n      const restartSignal = config.options.signal === 'SIGUSR2' ? 'SIGHUP' : 'SIGUSR2';\n      process.on(restartSignal, nodemon.restart);\n      utils.bus.on('error', () => {\n        utils.log.fail((new Error().stack));\n      });\n      utils.log.detail((config.options.restartable ? 'or ' : '') + 'send ' +\n        restartSignal + ' to ' + process.pid + ' to restart');\n    }\n\n    const ignoring = config.options.monitor.map(function (rule) {\n      if (rule.slice(0, 1) !== '!') {\n        return false;\n      }\n\n      rule = rule.slice(1);\n\n      // don't notify of default ignores\n      if (defaults.ignoreRoot.indexOf(rule) !== -1) {\n        return false;\n        return rule.slice(3).slice(0, -3);\n      }\n\n      if (rule.startsWith(cwd)) {\n        return rule.replace(cwd, '.');\n      }\n\n      return rule;\n    }).filter(Boolean).join(' ');\n    if (ignoring) utils.log.detail('ignoring: ' + ignoring);\n\n    utils.log.info('watching path(s): ' + config.options.monitor.map(function (rule) {\n      if (rule.slice(0, 1) !== '!') {\n        try {\n          rule = path.relative(process.cwd(), rule);\n        } catch (e) {}\n\n        return rule;\n      }\n\n      return false;\n    }).filter(Boolean).join(' '));\n\n    utils.log.info('watching extensions: ' + (config.options.execOptions.ext || '(all)'));\n\n    if (config.options.dump) {\n      utils.log._log('log', '--------------');\n      utils.log._log('log', 'node: ' + process.version);\n      utils.log._log('log', 'nodemon: ' + version.pinned);\n      utils.log._log('log', 'command: ' + process.argv.join(' '));\n      utils.log._log('log', 'cwd: ' + cwd);\n      utils.log._log('log', ['OS:', process.platform, process.arch].join(' '));\n      utils.log._log('log', '--------------');\n      utils.log._log('log', util.inspect(config, { depth: null }));\n      utils.log._log('log', '--------------');\n      if (!config.required) {\n        process.exit();\n      }\n\n      return;\n    }\n\n    config.run = true;\n\n    if (config.options.stdout === false) {\n      nodemon.on('start', function () {\n        nodemon.stdout = bus.stdout;\n        nodemon.stderr = bus.stderr;\n\n        bus.emit('readable');\n      });\n    }\n\n    if (config.options.events && Object.keys(config.options.events).length) {\n      Object.keys(config.options.events).forEach(function (key) {\n        utils.log.detail('bind ' + key + ' -> `' +\n          config.options.events[key] + '`');\n        nodemon.on(key, function () {\n          if (config.options && config.options.events) {\n            spawn(config.options.events[key], config,\n              [].slice.apply(arguments));\n          }\n        });\n      });\n    }\n\n    monitor.run(config.options);\n\n  });\n\n  return nodemon;\n}\n\nnodemon.restart = function () {\n  utils.log.status('restarting child process');\n  bus.emit('restart');\n  return nodemon;\n};\n\nnodemon.addListener = nodemon.on = function (event, handler) {\n  if (!eventHandlers[event]) { eventHandlers[event] = []; }\n  eventHandlers[event].push(handler);\n  bus.on(event, handler);\n  return nodemon;\n};\n\nnodemon.once = function (event, handler) {\n  if (!eventHandlers[event]) { eventHandlers[event] = []; }\n  eventHandlers[event].push(handler);\n  bus.once(event, function () {\n    debug('bus.once(%s)', event);\n    eventHandlers[event].splice(eventHandlers[event].indexOf(handler), 1);\n    handler.apply(this, arguments);\n  });\n  return nodemon;\n};\n\nnodemon.emit = function () {\n  bus.emit.apply(bus, [].slice.call(arguments));\n  return nodemon;\n};\n\nnodemon.removeAllListeners = function (event) {\n  // unbind only the `nodemon.on` event handlers\n  Object.keys(eventHandlers).filter(function (e) {\n    return event ? e === event : true;\n  }).forEach(function (event) {\n    eventHandlers[event].forEach(function (handler) {\n      bus.removeListener(event, handler);\n      eventHandlers[event].splice(eventHandlers[event].indexOf(handler), 1);\n    });\n  });\n\n  return nodemon;\n};\n\nnodemon.reset = function (done) {\n  bus.emit('reset', done);\n};\n\nbus.on('reset', function (done) {\n  debug('reset');\n  nodemon.removeAllListeners();\n  monitor.run.kill(true, function () {\n    utils.reset();\n    config.reset();\n    config.run = false;\n    if (done) {\n      done();\n    }\n  });\n});\n\n// expose the full config\nnodemon.config = config;\n\nmodule.exports = nodemon;\n\n"]},"metadata":{},"sourceType":"script"}