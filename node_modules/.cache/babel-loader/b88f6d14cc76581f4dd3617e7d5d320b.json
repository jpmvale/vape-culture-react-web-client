{"ast":null,"code":"// import {\n//   Button,\n//   Card,\n//   CardActions,\n//   CardContent,\n//   makeStyles,\n//   TextField,\n// } from \"@material-ui/core\";\n// import Backdrop from \"@material-ui/core/Backdrop\";\n// import Fade from \"@material-ui/core/Fade\";\n// import Modal from \"@material-ui/core/Modal\";\n// import { useEffect, useState } from \"react\";\n// import { useParams } from \"react-router\";\n// import API from \"../../services/api\";\n// const useStyles = makeStyles((theme) => ({\n//   root: {\n//     \"& .MuiTextField-root\": {\n//       margin: theme.spacing(1),\n//       width: \"25ch\",\n//     },\n//   },\n//   centralize: {\n//     marginLeft: \"auto\",\n//     marginRight: \"auto\",\n//     textAlign: \"center\",\n//   },\n//   modal: {\n//     display: \"flex\",\n//     alignItems: \"center\",\n//     justifyContent: \"center\",\n//   },\n//   paper: {\n//     backgroundColor: theme.palette.background.paper,\n//     border: \"2px solid #000\",\n//     boxShadow: theme.shadows[5],\n//     padding: theme.spacing(2, 4, 3),\n//   },\n// }));\n// const EditSale = () => {\n//   const { id } = useParams();\n//   const [product, setProduct] = useState(\"\");\n//   const [client, setClient] = useState(\"\");\n//   const [date, setDate] = useState(\"\");\n//   const [value, setValue] = useState(\"\");\n//   const [quantity, setQuantity] = useState(\"\");\n//   const [open, setOpen] = useState(false);\n//   const handleOpen = () => {\n//     setOpen(true);\n//   };\n//   const handleClose = () => {\n//     setOpen(false);\n//   };\n//   const getSaleData = async () => {\n//     await API.get(\"sale/getSale/\" + id)\n//       .then((response) => {\n//         getProduct(response.data.productId);\n//         getClient(response.data.clientId);\n//         setDate(response.data.date);\n//         setValue(response.data.value);\n//         setQuantity(response.data.quantity);\n//       })\n//       .catch((err) => {\n//         console.log(err.response);\n//       });\n//   };\n//   const getClient = async (id) => {\n//     await API.get(\"client/getClient/\" + id)\n//       .then((response) => {\n//         setClient(response.data);\n//       })\n//       .catch((err) => {\n//         console.log(err);\n//       });\n//   };\n//   const getProduct = async (id) => {\n//     await API.get(\"product/getProduct/\" + id)\n//       .then((response) => {\n//         setProduct(response.data);\n//       })\n//       .catch((err) => {\n//         console.log(err.response);\n//       });\n//   };\n//   const updatePurchase = async () => {\n//     console.log(\"here\");\n//     await API.post(\"client/updateClient/\" + id, {\n//       supplier,\n//       date,\n//       value,\n//       quantity,\n//     })\n//       .then((response) => {\n//         setSupplier(response.data.supplier);\n//         setDate(response.data.date);\n//         setValue(response.data.value);\n//         setQuantity(response.data.quantity);\n//       })\n//       .catch((err) => {\n//         console.log(err.response);\n//       });\n//   };\n//   const classes = useStyles();\n//   useEffect(() => {\n//     getPurchaseData();\n//   }, []);\n//   return (\n//     <div>\n//       <br></br>\n//       <Card variant=\"outlined\">\n//         <form className={classes.centralize}>\n//           <CardContent>\n//             <h1 className={classes.centralize}>Editar a compra</h1>\n//             <br />\n//             <TextField\n//               required\n//               variant=\"outlined\"\n//               id=\"standard-required-name\"\n//               label=\"Produto\"\n//               value={product.name}\n//               disabled\n//             />\n//             <TextField\n//               required\n//               variant=\"outlined\"\n//               id=\"standard-required-cpf\"\n//               label=\"Fornecedor\"\n//               value={supplier}\n//               onChange={(e) => {\n//                 setSupplier(e.target.value);\n//               }}\n//             />\n//             <TextField\n//               required\n//               variant=\"outlined\"\n//               id=\"standard-required-birth-date\"\n//               label=\"Data\"\n//               value={date}\n//               onChange={(e) => {\n//                 setDate(e.target.value);\n//               }}\n//             />\n//             <TextField\n//               required\n//               variant=\"outlined\"\n//               id=\"standard-required-address\"\n//               label=\"PreÃ§o R$\"\n//               value={value}\n//               onChange={(e) => {\n//                 setValue(e.target.value);\n//               }}\n//             />\n//             <TextField\n//               required\n//               variant=\"outlined\"\n//               id=\"standard-required-number\"\n//               label=\"Quantidade\"\n//               value={quantity}\n//               onChange={(e) => {\n//                 setQuantity(e.target.value);\n//               }}\n//             />\n//           </CardContent>\n//           <CardActions>\n//             <Button\n//               className={classes.centralize}\n//               onClick={() => {\n//                 handleOpen();\n//                 updatePurchase();\n//               }}\n//               variant=\"outlined\"\n//               color=\"primary\"\n//             >\n//               Atualizar\n//             </Button>\n//             <Modal\n//               aria-labelledby=\"transition-modal-title\"\n//               aria-describedby=\"transition-modal-description\"\n//               className={classes.modal}\n//               open={open}\n//               onClose={handleClose}\n//               closeAfterTransition\n//               BackdropComponent={Backdrop}\n//               BackdropProps={{\n//                 timeout: 500,\n//               }}\n//             >\n//               <Fade in={open}>\n//                 <div className={classes.paper}>\n//                   <h2 id=\"transition-modal-title\">\n//                     Compra atualizada com sucesso!\n//                   </h2>\n//                 </div>\n//               </Fade>\n//             </Modal>\n//           </CardActions>\n//         </form>\n//       </Card>\n//     </div>\n//   );\n// };\n// export default EditSale;","map":{"version":3,"sources":["C:/Users/jpmva/source/repos/vape-culture/vape-culture-react-web-client/src/pages/Sales/edit.js"],"names":[],"mappingssourcesContent":["// import {\r\n//   Button,\r\n//   Card,\r\n//   CardActions,\r\n//   CardContent,\r\n//   makeStyles,\r\n//   TextField,\r\n// } from \"@material-ui/core\";\r\n// import Backdrop from \"@material-ui/core/Backdrop\";\r\n// import Fade from \"@material-ui/core/Fade\";\r\n// import Modal from \"@material-ui/core/Modal\";\r\n// import { useEffect, useState } from \"react\";\r\n// import { useParams } from \"react-router\";\r\n\r\n// import API from \"../../services/api\";\r\n\r\n// const useStyles = makeStyles((theme) => ({\r\n//   root: {\r\n//     \"& .MuiTextField-root\": {\r\n//       margin: theme.spacing(1),\r\n//       width: \"25ch\",\r\n//     },\r\n//   },\r\n//   centralize: {\r\n//     marginLeft: \"auto\",\r\n//     marginRight: \"auto\",\r\n//     textAlign: \"center\",\r\n//   },\r\n//   modal: {\r\n//     display: \"flex\",\r\n//     alignItems: \"center\",\r\n//     justifyContent: \"center\",\r\n//   },\r\n//   paper: {\r\n//     backgroundColor: theme.palette.background.paper,\r\n//     border: \"2px solid #000\",\r\n//     boxShadow: theme.shadows[5],\r\n//     padding: theme.spacing(2, 4, 3),\r\n//   },\r\n// }));\r\n\r\n// const EditSale = () => {\r\n//   const { id } = useParams();\r\n//   const [product, setProduct] = useState(\"\");\r\n//   const [client, setClient] = useState(\"\");\r\n//   const [date, setDate] = useState(\"\");\r\n//   const [value, setValue] = useState(\"\");\r\n//   const [quantity, setQuantity] = useState(\"\");\r\n//   const [open, setOpen] = useState(false);\r\n\r\n//   const handleOpen = () => {\r\n//     setOpen(true);\r\n//   };\r\n\r\n//   const handleClose = () => {\r\n//     setOpen(false);\r\n//   };\r\n\r\n//   const getSaleData = async () => {\r\n//     await API.get(\"sale/getSale/\" + id)\r\n//       .then((response) => {\r\n//         getProduct(response.data.productId);\r\n//         getClient(response.data.clientId);\r\n//         setDate(response.data.date);\r\n//         setValue(response.data.value);\r\n//         setQuantity(response.data.quantity);\r\n//       })\r\n//       .catch((err) => {\r\n//         console.log(err.response);\r\n//       });\r\n//   };\r\n\r\n//   const getClient = async (id) => {\r\n//     await API.get(\"client/getClient/\" + id)\r\n//       .then((response) => {\r\n//         setClient(response.data);\r\n//       })\r\n//       .catch((err) => {\r\n//         console.log(err);\r\n//       });\r\n//   };\r\n\r\n//   const getProduct = async (id) => {\r\n//     await API.get(\"product/getProduct/\" + id)\r\n//       .then((response) => {\r\n//         setProduct(response.data);\r\n//       })\r\n//       .catch((err) => {\r\n//         console.log(err.response);\r\n//       });\r\n//   };\r\n\r\n//   const updatePurchase = async () => {\r\n//     console.log(\"here\");\r\n//     await API.post(\"client/updateClient/\" + id, {\r\n//       supplier,\r\n//       date,\r\n//       value,\r\n//       quantity,\r\n//     })\r\n//       .then((response) => {\r\n//         setSupplier(response.data.supplier);\r\n//         setDate(response.data.date);\r\n//         setValue(response.data.value);\r\n//         setQuantity(response.data.quantity);\r\n//       })\r\n//       .catch((err) => {\r\n//         console.log(err.response);\r\n//       });\r\n//   };\r\n\r\n//   const classes = useStyles();\r\n\r\n//   useEffect(() => {\r\n//     getPurchaseData();\r\n//   }, []);\r\n\r\n//   return (\r\n//     <div>\r\n//       <br></br>\r\n//       <Card variant=\"outlined\">\r\n//         <form className={classes.centralize}>\r\n//           <CardContent>\r\n//             <h1 className={classes.centralize}>Editar a compra</h1>\r\n//             <br />\r\n//             <TextField\r\n//               required\r\n//               variant=\"outlined\"\r\n//               id=\"standard-required-name\"\r\n//               label=\"Produto\"\r\n//               value={product.name}\r\n//               disabled\r\n//             />\r\n//             <TextField\r\n//               required\r\n//               variant=\"outlined\"\r\n//               id=\"standard-required-cpf\"\r\n//               label=\"Fornecedor\"\r\n//               value={supplier}\r\n//               onChange={(e) => {\r\n//                 setSupplier(e.target.value);\r\n//               }}\r\n//             />\r\n//             <TextField\r\n//               required\r\n//               variant=\"outlined\"\r\n//               id=\"standard-required-birth-date\"\r\n//               label=\"Data\"\r\n//               value={date}\r\n//               onChange={(e) => {\r\n//                 setDate(e.target.value);\r\n//               }}\r\n//             />\r\n//             <TextField\r\n//               required\r\n//               variant=\"outlined\"\r\n//               id=\"standard-required-address\"\r\n//               label=\"PreÃ§o R$\"\r\n//               value={value}\r\n//               onChange={(e) => {\r\n//                 setValue(e.target.value);\r\n//               }}\r\n//             />\r\n//             <TextField\r\n//               required\r\n//               variant=\"outlined\"\r\n//               id=\"standard-required-number\"\r\n//               label=\"Quantidade\"\r\n//               value={quantity}\r\n//               onChange={(e) => {\r\n//                 setQuantity(e.target.value);\r\n//               }}\r\n//             />\r\n//           </CardContent>\r\n//           <CardActions>\r\n//             <Button\r\n//               className={classes.centralize}\r\n//               onClick={() => {\r\n//                 handleOpen();\r\n//                 updatePurchase();\r\n//               }}\r\n//               variant=\"outlined\"\r\n//               color=\"primary\"\r\n//             >\r\n//               Atualizar\r\n//             </Button>\r\n//             <Modal\r\n//               aria-labelledby=\"transition-modal-title\"\r\n//               aria-describedby=\"transition-modal-description\"\r\n//               className={classes.modal}\r\n//               open={open}\r\n//               onClose={handleClose}\r\n//               closeAfterTransition\r\n//               BackdropComponent={Backdrop}\r\n//               BackdropProps={{\r\n//                 timeout: 500,\r\n//               }}\r\n//             >\r\n//               <Fade in={open}>\r\n//                 <div className={classes.paper}>\r\n//                   <h2 id=\"transition-modal-title\">\r\n//                     Compra atualizada com sucesso!\r\n//                   </h2>\r\n//                 </div>\r\n//               </Fade>\r\n//             </Modal>\r\n//           </CardActions>\r\n//         </form>\r\n//       </Card>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default EditSale;\r\n"]},"metadata":{},"sourceType":"module"}